<!--群聊-->
<style lang="less" scoped>
</style>

<template>
  <view class='container'>
      <view @tap='createChatGroup'>创建群聊</view>
      <view @tap='joinChatGroup'>加入群聊</view>
      <view @tap='sendIMMsg(1)'>发送消息</view>
      <view @tap='fetchLastHistoryMsg'>获取最近群组历史消息</view>
      <view @tap='fetchHistoryMsg'>获取下拉群组历史消息</view>
      <view @tap='fetchGroupList'>获取我的群组列表</view>
      <view @tap='fetchGroupMemberInfo'>获取群成员信息</view>
      <view @tap='quitGroup'>退出群聊</view>
      <view @tap='destroyGroup'>群主解散群</view>
      <view @tap='openC2C'>开启单聊</view>
      <view @tap='sendIMMsg(2)'>发送单聊消息</view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import webimHandler from '../utils/webim_handler.js'

export default class Example extends wepy.page {
    config = {
      navigationBarTitleText: ''
    };

    data = {
      groupId: '@TGS#2WI64DSFG'
    };

    components = {};

    methods = {
      createChatGroup() {
        const groupinfo = {
          'groupId': this.groupId,
          'gName': 'leoTest1234'
        }
        webimHandler.createBigGroup(groupinfo)
          .then(function(resp) {
            console.log('createChatGroup === 000', resp)
          })
          .catch(function(err) {
            console.log('createChatGroup === 001', err)
          })
      },
      joinChatGroup() {
        webimHandler.applyJoinBigGroup(this.groupId)
          .then(function(resp) {
            console.log('joinChatGroup === 000', resp)
          })
          .catch(function(err) {
            console.log('joinChatGroup === 001', err)
          })
      },
      sendIMMsg(type) {
        var content = type === '1' ? '发送一条群组测试消息来自leo' : '一条测试消息==单聊中'
        let custObj = {
          data: content,
          type: 0
        }
        // if (!content.replace(/^\s*|\s*$/g, '')) return
        webimHandler.onSendMsg(custObj)
          .then(function(resp) {
            console.log('======0000', resp)
          })
          .catch(function(err) {
            console.log('======0001', err)
          })
      },
      fetchLastHistoryMsg() {
        webimHandler.getLastGroupHistoryMsgs()
          .then(function(resp) {
            console.log('fetchLastHistoryMsg ====000', resp)
          })
          .catch(function(err) {
            console.log('fetchLastHistoryMsg ====001', err)
          })
      },
      fetchHistoryMsg() {
        webimHandler.getPrePageGroupHistoryMsgs(function(resp) {
        })
        webimHandler.getPrePageGroupHistoryMsgs()
          .then(function(resp) {
            console.log('getPrePageGroupHistoryMsgs === 000', resp)
          })
          .catch(function(err) {
            console.log('getPrePageGroupHistoryMsgs === 001', err)
          })
      },
      fetchGroupList() {
        webimHandler.getMyGroupList()
          .then(function(resp) {
            console.log('fetchGroupList ==== 000', resp)
          })
          .catch(function(err) {
            console.log('fetchGroupList err === 001', err)
          })
      },
      fetchGroupMemberInfo() {
        webimHandler.getGroupMemberInfo(this.groupId)
          .then(function(resp) {
            console.log('fetchGroupMemberInfo ==== 000', resp)
          })
          .catch(function(err) {
            console.log('fetchGroupMemberInfo err ====001', err)
          })
      },
      quitGroup() {
        webimHandler.quitBigGroup()
          .then(function(resp) {
            console.log('quitGroup ==== 000', resp)
          })
          .catch(function(err) {
            console.log('quitGroup err ====001', err)
          })
      },
      destroyGroup() {
        webimHandler.destroyGroup(this.groupId)
          .then(function(resp) {
            console.log('quitGroup ==== 000', resp)
          })
          .catch(function(err) {
            console.log('quitGroup err ====001', err)
          })
      },
      openC2C() {
        debugger
        webimHandler.init({
          selToID: '4539992675746582528', // 消息接收方id
          selTypeIsGroup: false
        })
      }
    };

    events = {};

    watch = {};

    computed = {};

    onLoad() { };

    onShow() {
      // 初始化IM 并登录
      this.initIM()
    };
  
    initIM() {
      const avchatRoomid = this.groupId
      webimHandler.init({
        avchatRoomid: avchatRoomid,
        selToID: avchatRoomid,
        selTypeIsGroup: true
      })
      var loginInfo = {
        'identifier': '4538169073928765440', // 当前用户ID,必须是否字符串类型，选填
        'identifierNick': 'leo', // 当前用户昵称，选填
        'userSig': 'eJxlj8tOg0AARfd8BWFbY*YJg4kLhlJtrK1Fa8OK8Jg2k9ZhQqcINP67EZtI4t2ek3tzL5Zt287b4vU2K4rqrExqOi0c*852gHPzB7WWZZqZFNflPyhaLWuRZjsj6gFCSikCYOzIUigjd-JqEIoZdH3gYR8xz6WEjOVTeUiHxd82AgB0CaB0rMj9AJ*jTThfT3X55G1XUS4V1FveJ3EQLXuTT0r*klEeVnXFjiFrkpUK5nvebtzskXt*1yfrc47y*HMGeTs9dJOHcLFsAn2MGZip96a4H00a*SGu9whmCLsEj2gj6pOs1CAgAClEGPzEsb6sb52vXwg_' // 当前用户身份凭证，必须是字符串类型，选填
      }
      // 小吴
      //   var loginInfo = {
      //     'identifier': '4513522734356803584', // 当前用户ID,必须是否字符串类型，选填
      //     'identifierNick': '小吴', // 当前用户昵称，选填
      //     'userSig': 'eJxlj01Pg0AARO-8CsIVo-spizfUCtgSQ0uq9UKQ3bWbIuCy3dga-7sRm0jiXN-LTObTcV3XKxar86quu31rSnPohedeuR7wzv5g3yteVqbEmv*D4qNXWpSVNEKPEFJKEQBTR3HRGiXVySAUYopQgAmmlwxgyshEHviuHBd-2wgAEBNEg6miXkeYzTY3aX771DfJ*riwvvRhXM-j602DL-wOGKP9dZ683C1BmoSWNc95uo2yju3lfYElh5GcLW20eyC2spko9GOQchXPj8n7dlgdWDOZNOpNnO7hICQ0DOiEWqEH1bWjgACkEGHwE8-5cr4BWvJe5Q__' // 当前用户身份凭证，必须是字符串类型，选填
      //   }
      /*
        "1": onApplyJoinGroupRequestNotify, //申请加群请求（只有管理员会收到）
        "2": onApplyJoinGroupAcceptNotify, //申请加群被同意（只有申请人能够收到）
        "3": onApplyJoinGroupRefuseNotify, //申请加群被拒绝（只有申请人能够收到）
        "4": onKickedGroupNotify, //被管理员踢出群(只有被踢者接收到)
        "5": onDestoryGroupNotify, //群被解散(全员接收)
        "6": onCreateGroupNotify, //创建群(创建者接收)
        "7": onInvitedJoinGroupNotify, //邀请加群(被邀请者接收)
        "8": onQuitGroupNotify, //主动退群(主动退出者接收)
        "9": onSetedGroupAdminNotify, //设置管理员(被设置者接收)
        "10": onCanceledGroupAdminNotify, //取消管理员(被取消者接收)
        "11": onRevokeGroupNotify, //群已被回收(全员接收)
        "255": onCustomGroupNotify//用户自定义通知(默认全员接收,暂不支持)
      */
      var onGroupSystemNotifys = {
        '1': this.onApplyJoinGroupRequestNotify, // 申请加入群（只有管理员收到）
        '6': this.onCreateGroupNotify, // 创建群(创建者接收)
        '8': this.onQuitGroupNotify
      }
      var listeners = {
        'onConnNotify': webimHandler.onConnNotify, // 监听连接状态回调变化事件
        'onMsgNotify': this.onMsgNotify, // 监听新消息(私聊，普通群(非直播聊天室)消息，全员推送消息)事件
        'onBigGroupMsgNotify': this.onBigGroupMsgNotify,
        'onGroupSystemNotifys': onGroupSystemNotifys // 监听（多终端同步）群系统消息事件，必填
      }
      webimHandler.sdkLogin(loginInfo, listeners)
    };
    onConnNotify(resp) {
      debugger
      console.error('\n ======resp \n', resp)
  
      switch (resp.ErrorCode) {
        case webimHandler.webimWX.CONNECTION_STATUS.ON:
          // webim.Log.warn('连接状态正常...');
          break
        case webimHandler.webimWX.CONNECTION_STATUS.OFF:
          console.error('连接已断开，无法收到新消息，请检查下你的网络是否正常')
          break
        default:
          console.error('未知连接状态,status=' + resp.ErrorCode)
          break
      }
    };
  
    onMsgNotify(newMsgList) {
      debugger
      console.log('====newMsg:', newMsgList)
    };
    onBigGroupMsgNotify(newMsgList) {
      debugger
      console.log('====00000group Msg:', newMsgList)
    };
    onCreateGroupNotify(notify) {
      debugger
      console.log('=== 0000 onCreateGroupNotify:', notify)
    };
    onApplyJoinGroupRequestNotify(notify) {
      debugger
      console.log('=== 0000 onApplyJoinGroupRequestNotify:', notify)
    };
    onQuitGroupNotify(notify) {
      debugger
      console.log('=== 0000 onQuitGroupNotify:', notify)
    }
  }
</script>
